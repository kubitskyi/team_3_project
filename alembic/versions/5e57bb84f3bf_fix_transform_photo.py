"""fix transform photo

Revision ID: 5e57bb84f3bf
Revises: a018142f4dcc
Create Date: 2024-10-14 17:12:36.074956

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '5e57bb84f3bf'
down_revision: Union[str, None] = 'a018142f4dcc'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('photo_transformations', sa.Column('original_photo_id', sa.Integer(), nullable=True))
    op.drop_constraint('photo_transformations_photo_id_fkey', 'photo_transformations', type_='foreignkey')
    op.create_foreign_key(None, 'photo_transformations', 'photos', ['original_photo_id'], ['id'], ondelete='CASCADE')
    op.drop_column('photo_transformations', 'transformation_parameters')
    op.drop_column('photo_transformations', 'photo_id')
    op.drop_column('photo_transformations', 'qr_code_url')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('photo_transformations', sa.Column('qr_code_url', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('photo_transformations', sa.Column('photo_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('photo_transformations', sa.Column('transformation_parameters', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'photo_transformations', type_='foreignkey')
    op.create_foreign_key('photo_transformations_photo_id_fkey', 'photo_transformations', 'photos', ['photo_id'], ['id'], ondelete='CASCADE')
    op.drop_column('photo_transformations', 'original_photo_id')
    # ### end Alembic commands ###
